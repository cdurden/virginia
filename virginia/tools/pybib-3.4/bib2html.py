#! /usr/bin/env python
# 
# Convert bib file to HTML
#
# TODO
#  take out tex fragments, backslash, braces etc
#  convert tex accents to HTML accents
#  do string substitution using templates
#  better handling of different reference types
#  probably needs more rigour in the HTML code
#  use CSS


# Copyright (c) 2007, Peter Corke
#
# All rights reserved.
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * The name of the copyright holder may not be used to endorse or 
#	promote products derived from this software without specific prior 
#	written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS AND CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.

import Bibliography;
import BibEntry;
import BibTeX;
import string;
import sys;
import time;
import optparse;
import os;

    
str = "";
highlight = None

def append(s):
    global str;

    str += s;

def append_nl(s):
    global str;

    str += s + '\n';

class HBibEntry(BibEntry.BibEntry):

    def __init__(self, be, rootdir=None):
        self.be = be
        self.fieldDict = be.fieldDict;
        self.rootdir = rootdir

    def display(self):
        append( "<p>" );
        append( "<a name='%s'/>" % self.be.getKey() );
        # put title
        if self.getURL():
            append( '<a href="%s"><i>"%s"</i></a>, ' % (self.getURL(), self.getTitle()) );
        else:
            defaultpath = os.path.join("papers",self.be.getKey()+".pdf")
            if os.path.isfile(os.path.join(self.rootdir,defaultpath)):
                append( '<a href="%s"><i>"%s"</i></a>, ' % ("/"+defaultpath, self.getTitle()) );
            else: 
                append( '<i>"%s"</i>, ' % self.getTitle() );

        # put authors
        append( self.getAuthors() + '.  ' );
        month = self.getMonthName();
        year = self.getYear();

        # put more fields
        for k in ['Journal', 'Volume', 'Number', 'Booktitle', 
            'Address', 'Institution']:

            if k in self.fieldDict:
                append( self.fieldDict[k].strip('"') + ', ' );
        eds = self.getEditorsNames();
        if eds:
            append("eds. " + eds + ', ');
        if month:
            append( month );
            if year > 0:
                append( ", " + repr(year) );
        else:
            if year > 0:
                append( " " + repr(year) );
        append( " (%s)" % self.be.getKey() );
        append_nl( "</p>" );

def html(bibfile, keylist=None, rootdir=None):
    global str
    str = ''
    bib = BibTeX.BibTeX();
    bib.parseFile(bibfile);
                
    bib.resolveAbbrev();

    bibentries = []
    if keylist is not None:
        for key in keylist:
            try:
                bibentries.append(bib.__getitem__(key))
            except ValueError:
                pass
    else:
        bibentries = bib
    
    ## generate HTML
#    append_nl( "<html>" );
#    append_nl( "<head>" );
#    append_nl( "  <title>Bibliography %s</title>" % ( bibfile,) );
#    append_nl( """  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">""" );
#    append_nl( "</head>" );
#    append_nl( "<body>" );
    
    for be in bibentries:
        hb = HBibEntry(be, rootdir);
        hb.display();
    
    if highlight:
        str = string.replace(str, highlight, """<font color="ff0000">%s</font>""" % highlight);
    
#    append_nl( "<hr>" );
#    append_nl( "<p>Generated by bib2html at %s.  bib2html by Peter Corke</p>" % time.asctime() );
#    append_nl( "</body>" );
#    append_nl( "</html>" );
    return str


